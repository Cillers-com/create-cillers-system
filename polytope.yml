templates:

#################################
# ENVIRONMWENTS                 #
#################################

- id: dev
  run:
  - template: stack
    args:
      couchbase-host: cb.qdwkspgkf0h5rpzo.cloud.couchbase.com
      couchbase-username: "#pt-secret couchbase-username-dev"
      couchbase-password: "#pt-secret couchbase-password-dev"
  - dev-tools


##################################
# STACK VARIANTS                 #
##################################

- id: stack
  params: 
  - { id: couchbase-host, type: str }
  - { id: couchbase-username, type: str }
  - { id: couchbase-password, type: str }
  run:
  - template: couchbase-capella
    args:
      couchbase-host: "#pt-param couchbase-host"
      couchbase-username: "#pt-param couchbase-username"
      couchbase-password: "#pt-param couchbase-password"
  - template: web-app
  - template: api
    args:
      couchbase-host: "#pt-param couchbase-host"
      couchbase-username: "#pt-param couchbase-username"
      couchbase-password: "#pt-param couchbase-password"


###################################
# TOOL VARIANTS                   #
###################################

- id: dev-tools
  run: 
  - api-client-graphql


###################################
# STACK COMPONENTS                #
###################################

- id: couchbase-capella
  params:
  - { id: couchbase-host, type: str }
  - { id: couchbase-username, type: str }
  - { id: couchbase-password, type: str }
  run:
  - module: couchbase-init-python
    args:
      couchbase-host: "#pt-param couchbase-host"
      couchbase-username: "#pt-param couchbase-username"
      couchbase-password: "#pt-param couchbase-password"
      couchbase-tls: 'true'
      couchbase-type: capella

- id: web-app
  run:
    - web-app-react-graphql

- id: api
  params:
  - { id: couchbase-host, type: str }
  - { id: couchbase-username, type: str }
  - { id: couchbase-password, type: str }
  run:
  - module: api-python-graphql
    args:
      couchbase-host: "#pt-param couchbase-host"
      couchbase-username: "#pt-param couchbase-username"
      couchbase-password: "#pt-param couchbase-password"
      couchbase-tls: 'true'
      couchbase-type: capella


#####################################
# MODULES                           #
#####################################

modules:
  - id: web-app-react-graphql
    info: The Web App
    module: polytope/node
    params:
      - { id: api-protocol-host-port, type: [default, str, http://localhost:4000] }
    args:
      id: web-app-react-graphql 
      image: gcr.io/arched-inkwell-420116/node:21.7.0-slim
      code: { type: host, path: ./code/web-app }
      cmd: ./bin/run
      env:
        - { name: PORT, value: 11000 } 
        - { name: HOST, value: 0.0.0.0 } 
        - { name: REACT_APP_API_BASE_URL, value: "#pt-js params['apiProtocolHostPort'] + '/api/graphql'" }
      restart:
        policy: on-failure
      services:
        - { id: web-app, ports: [{protocol: http, port: 11000}] }
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/.npm/, source: { type: volume, scope: project, id: npm-cache }} 
        - { path: /app/node_modules/, source: { type: volume, scope: project, id: npm-modules }}

  - id: api-python-graphql
    info: The App API
    module: polytope/python
    params:
    - { id: api-protocol-host-port, type: [default, str, http://localhost:11100] }
    - { id: couchbase-host, type: str }
    - { id: couchbase-username, type: [default, str, admin] }
    - { id: couchbase-password, type: [default, str, password] }
    - { id: couchbase-tls, type: [default, str, 'false'] }
    - { id: couchbase-main-bucket-name, type: [default, str, 'main'] }
    - { id: couchbase-type, type: [default, str, 'server'] }
    args: 
      id: api-pyton-graphql
      image: gcr.io/arched-inkwell-420116/python:3.11.8-slim-bookworm
      code: { type: host, path: ./code/api }
      cmd: ./bin/run
      restart: { policy: on-failure }
      services: 
      - { id: "api", ports: [{protocol: http, port: 4000}] }
      env:
        - { name: COUCHBASE_HOST, value: "#pt-param couchbase-host" }
        - { name: COUCHBASE_TLS, value: "#pt-param couchbase-tls" }
        - { name: COUCHBASE_USERNAME, value: "#pt-param couchbase-username" }
        - { name: COUCHBASE_PASSWORD, value: "#pt-param couchbase-password" }
        - { name: COUCHBASE_MAIN_BUCKET_NAME, value: "#pt-param couchbase-main-bucket-name" }
        - { name: COUCHBASE_TYPE, value: "#pt-param couchbase-type" }
        - { name: HTTP_PORT, value: 4000 } 
        - { name: APP_PROTOCOL_HOST_PORT, value: "#pt-param api-protocol-host-port" }
        - { name: HTTP_DEBUG, value: false } 
        - { name: HTTP_AUTORELOAD, value: true } 
        - { name: HTTP_GRAPHQL_UI, value: false } 
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/conf/, source: { type: host, path: ./conf }}

  - id: api-client-graphql
    info: An API Client
    module: polytope/node
    params:
      - id: api-protocol-host-port
        type: [default, str, http://localhost:4000]
    args:
      id: api-client-graphql
      image: gcr.io/arched-inkwell-420116/node:21.7.0-slim
      code: { type: host, path: ./cillers/api-client-graphql }
      cmd: ./bin/run
      env:
        - { name: PORT, value: 11001 } 
        - { name: HOST, value: 0.0.0.0 } 
        - { name: REACT_APP_API_BASE_URL, value: "#pt-js params['apiProtocolHostPort'] + '/api/graphql'" }
      restart:
        policy: on-failure
      services:
        - id: api-client-graphql
          ports: [{protocol: http, port: 11001}]
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache-api-client-graphql}}
        - { path: /root/.npm/, source: { type: volume, scope: project, id: npm-cache-api-client-graphql }} 
        - { path: /app/node_modules/, source: { type: volume, scope: project, id: npm-modules-api-client-graphql }}

  - id: couchbase-init-python
    params:
    - { id: couchbase-host, type: [default, str, 'couchbase'] }
    - { id: couchbase-username, type: str }
    - { id: couchbase-password, type: str }
    - { id: couchbase-tls, type: [default, str, 'false'] }
    - { id: couchbase-main-bucket-name, type: [default, str, 'main'] }
    - { id: couchbase-type, type: [default, str, 'server'] }
    module: polytope/python
    args:
      image: gcr.io/arched-inkwell-420116/python:3.11.8-slim-bookworm
      container-id: couchbase-init-python
      code: { type: host, path: ./cillers/couchbase-init-python }
      cmd: ./bin/run
      restart: { policy: on-failure }
      env:
        - { name: COUCHBASE_HOST, value: "#pt-param couchbase-host" }
        - { name: COUCHBASE_TLS, value: "#pt-param couchbase-tls" }
        - { name: COUCHBASE_USERNAME, value: "#pt-param couchbase-username" }
        - { name: COUCHBASE_PASSWORD, value: "#pt-param couchbase-password" }
        - { name: COUCHBASE_MAIN_BUCKET_NAME, value: "#pt-param couchbase-main-bucket-name" }
        - { name: COUCHBASE_TYPE, value: "#pt-param couchbase-type" }
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/conf/, source: { type: host, path: ./conf/components/couchbase }}

